graph(%1 : Float(32, 3, 3, 3), %2 : Float(32), %3 : Float(32), %4 : Float(32), %5 : Float(32, 32, 3, 3), %6 : Float(32), %7 : Float(32), %8 : Float(32), %9 : Float(64, 32, 3, 3), %10 : Float(64), %11 : Float(64), %12 : Float(64), %13 : Float(80, 64, 1, 1), %14 : Float(80), %15 : Float(80), %16 : Float(80), %17 : Float(192, 80, 3, 3), %18 : Float(192), %19 : Float(192), %20 : Float(192), %21 : Float(64, 192, 1, 1), %22 : Float(64), %23 : Float(64), %24 : Float(64), %25 : Float(48, 192, 1, 1), %26 : Float(48), %27 : Float(48), %28 : Float(48), %29 : Float(64, 48, 5, 5), %30 : Float(64), %31 : Float(64), %32 : Float(64), %33 : Float(64, 192, 1, 1), %34 : Float(64), %35 : Float(64), %36 : Float(64), %37 : Float(96, 64, 3, 3), %38 : Float(96), %39 : Float(96), %40 : Float(96), %41 : Float(96, 96, 3, 3), %42 : Float(96), %43 : Float(96), %44 : Float(96), %45 : Float(32, 192, 1, 1), %46 : Float(32), %47 : Float(32), %48 : Float(32), %49 : Float(64, 256, 1, 1), %50 : Float(64), %51 : Float(64), %52 : Float(64), %53 : Float(48, 256, 1, 1), %54 : Float(48), %55 : Float(48), %56 : Float(48), %57 : Float(64, 48, 5, 5), %58 : Float(64), %59 : Float(64), %60 : Float(64), %61 : Float(64, 256, 1, 1), %62 : Float(64), %63 : Float(64), %64 : Float(64), %65 : Float(96, 64, 3, 3), %66 : Float(96), %67 : Float(96), %68 : Float(96), %69 : Float(96, 96, 3, 3), %70 : Float(96), %71 : Float(96), %72 : Float(96), %73 : Float(64, 256, 1, 1), %74 : Float(64), %75 : Float(64), %76 : Float(64), %77 : Float(64, 288, 1, 1), %78 : Float(64), %79 : Float(64), %80 : Float(64), %81 : Float(48, 288, 1, 1), %82 : Float(48), %83 : Float(48), %84 : Float(48), %85 : Float(64, 48, 5, 5), %86 : Float(64), %87 : Float(64), %88 : Float(64), %89 : Float(64, 288, 1, 1), %90 : Float(64), %91 : Float(64), %92 : Float(64), %93 : Float(96, 64, 3, 3), %94 : Float(96), %95 : Float(96), %96 : Float(96), %97 : Float(96, 96, 3, 3), %98 : Float(96), %99 : Float(96), %100 : Float(96), %101 : Float(64, 288, 1, 1), %102 : Float(64), %103 : Float(64), %104 : Float(64), %105 : Float(384, 288, 3, 3), %106 : Float(384), %107 : Float(384), %108 : Float(384), %109 : Float(64, 288, 1, 1), %110 : Float(64), %111 : Float(64), %112 : Float(64), %113 : Float(96, 64, 3, 3), %114 : Float(96), %115 : Float(96), %116 : Float(96), %117 : Float(96, 96, 3, 3), %118 : Float(96), %119 : Float(96), %120 : Float(96), %121 : Float(192, 768, 1, 1), %122 : Float(192), %123 : Float(192), %124 : Float(192), %125 : Float(128, 768, 1, 1), %126 : Float(128), %127 : Float(128), %128 : Float(128), %129 : Float(128, 128, 1, 7), %130 : Float(128), %131 : Float(128), %132 : Float(128), %133 : Float(192, 128, 7, 1), %134 : Float(192), %135 : Float(192), %136 : Float(192), %137 : Float(128, 768, 1, 1), %138 : Float(128), %139 : Float(128), %140 : Float(128), %141 : Float(128, 128, 7, 1), %142 : Float(128), %143 : Float(128), %144 : Float(128), %145 : Float(128, 128, 1, 7), %146 : Float(128), %147 : Float(128), %148 : Float(128), %149 : Float(128, 128, 7, 1), %150 : Float(128), %151 : Float(128), %152 : Float(128), %153 : Float(192, 128, 1, 7), %154 : Float(192), %155 : Float(192), %156 : Float(192), %157 : Float(192, 768, 1, 1), %158 : Float(192), %159 : Float(192), %160 : Float(192), %161 : Float(192, 768, 1, 1), %162 : Float(192), %163 : Float(192), %164 : Float(192), %165 : Float(160, 768, 1, 1), %166 : Float(160), %167 : Float(160), %168 : Float(160), %169 : Float(160, 160, 1, 7), %170 : Float(160), %171 : Float(160), %172 : Float(160), %173 : Float(192, 160, 7, 1), %174 : Float(192), %175 : Float(192), %176 : Float(192), %177 : Float(160, 768, 1, 1), %178 : Float(160), %179 : Float(160), %180 : Float(160), %181 : Float(160, 160, 7, 1), %182 : Float(160), %183 : Float(160), %184 : Float(160), %185 : Float(160, 160, 1, 7), %186 : Float(160), %187 : Float(160), %188 : Float(160), %189 : Float(160, 160, 7, 1), %190 : Float(160), %191 : Float(160), %192 : Float(160), %193 : Float(192, 160, 1, 7), %194 : Float(192), %195 : Float(192), %196 : Float(192), %197 : Float(192, 768, 1, 1), %198 : Float(192), %199 : Float(192), %200 : Float(192), %201 : Float(192, 768, 1, 1), %202 : Float(192), %203 : Float(192), %204 : Float(192), %205 : Float(160, 768, 1, 1), %206 : Float(160), %207 : Float(160), %208 : Float(160), %209 : Float(160, 160, 1, 7), %210 : Float(160), %211 : Float(160), %212 : Float(160), %213 : Float(192, 160, 7, 1), %214 : Float(192), %215 : Float(192), %216 : Float(192), %217 : Float(160, 768, 1, 1), %218 : Float(160), %219 : Float(160), %220 : Float(160), %221 : Float(160, 160, 7, 1), %222 : Float(160), %223 : Float(160), %224 : Float(160), %225 : Float(160, 160, 1, 7), %226 : Float(160), %227 : Float(160), %228 : Float(160), %229 : Float(160, 160, 7, 1), %230 : Float(160), %231 : Float(160), %232 : Float(160), %233 : Float(192, 160, 1, 7), %234 : Float(192), %235 : Float(192), %236 : Float(192), %237 : Float(192, 768, 1, 1), %238 : Float(192), %239 : Float(192), %240 : Float(192), %241 : Float(192, 768, 1, 1), %242 : Float(192), %243 : Float(192), %244 : Float(192), %245 : Float(192, 768, 1, 1), %246 : Float(192), %247 : Float(192), %248 : Float(192), %249 : Float(192, 192, 1, 7), %250 : Float(192), %251 : Float(192), %252 : Float(192), %253 : Float(192, 192, 7, 1), %254 : Float(192), %255 : Float(192), %256 : Float(192), %257 : Float(192, 768, 1, 1), %258 : Float(192), %259 : Float(192), %260 : Float(192), %261 : Float(192, 192, 7, 1), %262 : Float(192), %263 : Float(192), %264 : Float(192), %265 : Float(192, 192, 1, 7), %266 : Float(192), %267 : Float(192), %268 : Float(192), %269 : Float(192, 192, 7, 1), %270 : Float(192), %271 : Float(192), %272 : Float(192), %273 : Float(192, 192, 1, 7), %274 : Float(192), %275 : Float(192), %276 : Float(192), %277 : Float(192, 768, 1, 1), %278 : Float(192), %279 : Float(192), %280 : Float(192), %281 : Float(128, 768, 1, 1), %282 : Float(128), %283 : Float(128), %284 : Float(128), %285 : Float(768, 128, 3, 3), %286 : Float(768), %287 : Float(768), %288 : Float(768), %289 : Float(1000, 768), %290 : Float(1000), %291 : Float(192, 768, 1, 1), %292 : Float(192), %293 : Float(192), %294 : Float(192), %295 : Float(320, 192, 3, 3), %296 : Float(320), %297 : Float(320), %298 : Float(320), %299 : Float(192, 768, 1, 1), %300 : Float(192), %301 : Float(192), %302 : Float(192), %303 : Float(192, 192, 1, 7), %304 : Float(192), %305 : Float(192), %306 : Float(192), %307 : Float(192, 192, 7, 1), %308 : Float(192), %309 : Float(192), %310 : Float(192), %311 : Float(192, 192, 3, 3), %312 : Float(192), %313 : Float(192), %314 : Float(192), %315 : Float(320, 1280, 1, 1), %316 : Float(320), %317 : Float(320), %318 : Float(320), %319 : Float(384, 1280, 1, 1), %320 : Float(384), %321 : Float(384), %322 : Float(384), %323 : Float(384, 384, 1, 3), %324 : Float(384), %325 : Float(384), %326 : Float(384), %327 : Float(384, 384, 3, 1), %328 : Float(384), %329 : Float(384), %330 : Float(384), %331 : Float(448, 1280, 1, 1), %332 : Float(448), %333 : Float(448), %334 : Float(448), %335 : Float(384, 448, 3, 3), %336 : Float(384), %337 : Float(384), %338 : Float(384), %339 : Float(384, 384, 1, 3), %340 : Float(384), %341 : Float(384), %342 : Float(384), %343 : Float(384, 384, 3, 1), %344 : Float(384), %345 : Float(384), %346 : Float(384), %347 : Float(192, 1280, 1, 1), %348 : Float(192), %349 : Float(192), %350 : Float(192), %351 : Float(320, 2048, 1, 1), %352 : Float(320), %353 : Float(320), %354 : Float(320), %355 : Float(384, 2048, 1, 1), %356 : Float(384), %357 : Float(384), %358 : Float(384), %359 : Float(384, 384, 1, 3), %360 : Float(384), %361 : Float(384), %362 : Float(384), %363 : Float(384, 384, 3, 1), %364 : Float(384), %365 : Float(384), %366 : Float(384), %367 : Float(448, 2048, 1, 1), %368 : Float(448), %369 : Float(448), %370 : Float(448), %371 : Float(384, 448, 3, 3), %372 : Float(384), %373 : Float(384), %374 : Float(384), %375 : Float(384, 384, 1, 3), %376 : Float(384), %377 : Float(384), %378 : Float(384), %379 : Float(384, 384, 3, 1), %380 : Float(384), %381 : Float(384), %382 : Float(384), %383 : Float(192, 2048, 1, 1), %384 : Float(192), %385 : Float(192), %386 : Float(192), %387 : Float(1000, 2048), %388 : Float(1000), %389 : Float(10, 3, 224, 224)) {
  %390.0 : Float(10, 32, 111, 111) = CppOp[ConvForward](%389, %1, %2), uses = [[%392.i0]];
  %392.0 : Float(10, 32, 111, 111) = CppOp[N5torch8autograd16BatchNormForwardE](%390.0, %3, %4), uses = [[%394.i0]];
  %394.0 : Float(10, 32, 111, 111) = ^Threshold(0, 0, False)(%392.0), uses = [[%396.i0]];
  %396.0 : Float(10, 32, 109, 109) = CppOp[ConvForward](%394.0, %5, %6), uses = [[%398.i0]];
  %398.0 : Float(10, 32, 109, 109) = CppOp[N5torch8autograd16BatchNormForwardE](%396.0, %7, %8), uses = [[%400.i0]];
  %400.0 : Float(10, 32, 109, 109) = ^Threshold(0, 0, False)(%398.0), uses = [[%402.i0]];
  %402.0 : Float(10, 64, 109, 109) = CppOp[ConvForward](%400.0, %9, %10), uses = [[%404.i0]];
  %404.0 : Float(10, 64, 109, 109) = CppOp[N5torch8autograd16BatchNormForwardE](%402.0, %11, %12), uses = [[%406.i0]];
  %406.0 : Float(10, 64, 109, 109) = ^Threshold(0, 0, False)(%404.0), uses = [[%408.i0]];
  %408.0 : Float(10, 64, 54, 54), %408.1 : Long(10, 64, 54, 54) = ^MaxPool2d(3, 2, 0, 1, False)(%406.0), uses = [[%411.i0], []];
  %411.0 : Float(10, 80, 54, 54) = CppOp[ConvForward](%408.0, %13, %14), uses = [[%413.i0]];
  %413.0 : Float(10, 80, 54, 54) = CppOp[N5torch8autograd16BatchNormForwardE](%411.0, %15, %16), uses = [[%415.i0]];
  %415.0 : Float(10, 80, 54, 54) = ^Threshold(0, 0, False)(%413.0), uses = [[%417.i0]];
  %417.0 : Float(10, 192, 52, 52) = CppOp[ConvForward](%415.0, %17, %18), uses = [[%419.i0]];
  %419.0 : Float(10, 192, 52, 52) = CppOp[N5torch8autograd16BatchNormForwardE](%417.0, %19, %20), uses = [[%421.i0]];
  %421.0 : Float(10, 192, 52, 52) = ^Threshold(0, 0, False)(%419.0), uses = [[%423.i0]];
  %423.0 : Float(10, 192, 25, 25), %423.1 : Long(10, 192, 25, 25) = ^MaxPool2d(3, 2, 0, 1, False)(%421.0), uses = [[%426.i0, %432.i0, %444.i0, %462.i0], []];
  %426.0 : Float(10, 64, 25, 25) = CppOp[ConvForward](%423.0, %21, %22), uses = [[%428.i0]];
  %428.0 : Float(10, 64, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%426.0, %23, %24), uses = [[%430.i0]];
  %430.0 : Float(10, 64, 25, 25) = ^Threshold(0, 0, False)(%428.0), uses = [[%470.i0]];
  %432.0 : Float(10, 48, 25, 25) = CppOp[ConvForward](%423.0, %25, %26), uses = [[%434.i0]];
  %434.0 : Float(10, 48, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%432.0, %27, %28), uses = [[%436.i0]];
  %436.0 : Float(10, 48, 25, 25) = ^Threshold(0, 0, False)(%434.0), uses = [[%438.i0]];
  %438.0 : Float(10, 64, 25, 25) = CppOp[ConvForward](%436.0, %29, %30), uses = [[%440.i0]];
  %440.0 : Float(10, 64, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%438.0, %31, %32), uses = [[%442.i0]];
  %442.0 : Float(10, 64, 25, 25) = ^Threshold(0, 0, False)(%440.0), uses = [[%470.i1]];
  %444.0 : Float(10, 64, 25, 25) = CppOp[ConvForward](%423.0, %33, %34), uses = [[%446.i0]];
  %446.0 : Float(10, 64, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%444.0, %35, %36), uses = [[%448.i0]];
  %448.0 : Float(10, 64, 25, 25) = ^Threshold(0, 0, False)(%446.0), uses = [[%450.i0]];
  %450.0 : Float(10, 96, 25, 25) = CppOp[ConvForward](%448.0, %37, %38), uses = [[%452.i0]];
  %452.0 : Float(10, 96, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%450.0, %39, %40), uses = [[%454.i0]];
  %454.0 : Float(10, 96, 25, 25) = ^Threshold(0, 0, False)(%452.0), uses = [[%456.i0]];
  %456.0 : Float(10, 96, 25, 25) = CppOp[ConvForward](%454.0, %41, %42), uses = [[%458.i0]];
  %458.0 : Float(10, 96, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%456.0, %43, %44), uses = [[%460.i0]];
  %460.0 : Float(10, 96, 25, 25) = ^Threshold(0, 0, False)(%458.0), uses = [[%470.i2]];
  %462.0 : Float(10, 192, 25, 25) = ^AvgPool2d(3, 1, 1, False, True)(%423.0), uses = [[%464.i0]];
  %464.0 : Float(10, 32, 25, 25) = CppOp[ConvForward](%462.0, %45, %46), uses = [[%466.i0]];
  %466.0 : Float(10, 32, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%464.0, %47, %48), uses = [[%468.i0]];
  %468.0 : Float(10, 32, 25, 25) = ^Threshold(0, 0, False)(%466.0), uses = [[%470.i3]];
  %470.0 : Float(10, 256, 25, 25) = ^Concat(1)(%430.0, %442.0, %460.0, %468.0), uses = [[%472.i0, %478.i0, %490.i0, %508.i0]];
  %472.0 : Float(10, 64, 25, 25) = CppOp[ConvForward](%470.0, %49, %50), uses = [[%474.i0]];
  %474.0 : Float(10, 64, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%472.0, %51, %52), uses = [[%476.i0]];
  %476.0 : Float(10, 64, 25, 25) = ^Threshold(0, 0, False)(%474.0), uses = [[%516.i0]];
  %478.0 : Float(10, 48, 25, 25) = CppOp[ConvForward](%470.0, %53, %54), uses = [[%480.i0]];
  %480.0 : Float(10, 48, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%478.0, %55, %56), uses = [[%482.i0]];
  %482.0 : Float(10, 48, 25, 25) = ^Threshold(0, 0, False)(%480.0), uses = [[%484.i0]];
  %484.0 : Float(10, 64, 25, 25) = CppOp[ConvForward](%482.0, %57, %58), uses = [[%486.i0]];
  %486.0 : Float(10, 64, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%484.0, %59, %60), uses = [[%488.i0]];
  %488.0 : Float(10, 64, 25, 25) = ^Threshold(0, 0, False)(%486.0), uses = [[%516.i1]];
  %490.0 : Float(10, 64, 25, 25) = CppOp[ConvForward](%470.0, %61, %62), uses = [[%492.i0]];
  %492.0 : Float(10, 64, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%490.0, %63, %64), uses = [[%494.i0]];
  %494.0 : Float(10, 64, 25, 25) = ^Threshold(0, 0, False)(%492.0), uses = [[%496.i0]];
  %496.0 : Float(10, 96, 25, 25) = CppOp[ConvForward](%494.0, %65, %66), uses = [[%498.i0]];
  %498.0 : Float(10, 96, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%496.0, %67, %68), uses = [[%500.i0]];
  %500.0 : Float(10, 96, 25, 25) = ^Threshold(0, 0, False)(%498.0), uses = [[%502.i0]];
  %502.0 : Float(10, 96, 25, 25) = CppOp[ConvForward](%500.0, %69, %70), uses = [[%504.i0]];
  %504.0 : Float(10, 96, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%502.0, %71, %72), uses = [[%506.i0]];
  %506.0 : Float(10, 96, 25, 25) = ^Threshold(0, 0, False)(%504.0), uses = [[%516.i2]];
  %508.0 : Float(10, 256, 25, 25) = ^AvgPool2d(3, 1, 1, False, True)(%470.0), uses = [[%510.i0]];
  %510.0 : Float(10, 64, 25, 25) = CppOp[ConvForward](%508.0, %73, %74), uses = [[%512.i0]];
  %512.0 : Float(10, 64, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%510.0, %75, %76), uses = [[%514.i0]];
  %514.0 : Float(10, 64, 25, 25) = ^Threshold(0, 0, False)(%512.0), uses = [[%516.i3]];
  %516.0 : Float(10, 288, 25, 25) = ^Concat(1)(%476.0, %488.0, %506.0, %514.0), uses = [[%518.i0, %524.i0, %536.i0, %554.i0]];
  %518.0 : Float(10, 64, 25, 25) = CppOp[ConvForward](%516.0, %77, %78), uses = [[%520.i0]];
  %520.0 : Float(10, 64, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%518.0, %79, %80), uses = [[%522.i0]];
  %522.0 : Float(10, 64, 25, 25) = ^Threshold(0, 0, False)(%520.0), uses = [[%562.i0]];
  %524.0 : Float(10, 48, 25, 25) = CppOp[ConvForward](%516.0, %81, %82), uses = [[%526.i0]];
  %526.0 : Float(10, 48, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%524.0, %83, %84), uses = [[%528.i0]];
  %528.0 : Float(10, 48, 25, 25) = ^Threshold(0, 0, False)(%526.0), uses = [[%530.i0]];
  %530.0 : Float(10, 64, 25, 25) = CppOp[ConvForward](%528.0, %85, %86), uses = [[%532.i0]];
  %532.0 : Float(10, 64, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%530.0, %87, %88), uses = [[%534.i0]];
  %534.0 : Float(10, 64, 25, 25) = ^Threshold(0, 0, False)(%532.0), uses = [[%562.i1]];
  %536.0 : Float(10, 64, 25, 25) = CppOp[ConvForward](%516.0, %89, %90), uses = [[%538.i0]];
  %538.0 : Float(10, 64, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%536.0, %91, %92), uses = [[%540.i0]];
  %540.0 : Float(10, 64, 25, 25) = ^Threshold(0, 0, False)(%538.0), uses = [[%542.i0]];
  %542.0 : Float(10, 96, 25, 25) = CppOp[ConvForward](%540.0, %93, %94), uses = [[%544.i0]];
  %544.0 : Float(10, 96, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%542.0, %95, %96), uses = [[%546.i0]];
  %546.0 : Float(10, 96, 25, 25) = ^Threshold(0, 0, False)(%544.0), uses = [[%548.i0]];
  %548.0 : Float(10, 96, 25, 25) = CppOp[ConvForward](%546.0, %97, %98), uses = [[%550.i0]];
  %550.0 : Float(10, 96, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%548.0, %99, %100), uses = [[%552.i0]];
  %552.0 : Float(10, 96, 25, 25) = ^Threshold(0, 0, False)(%550.0), uses = [[%562.i2]];
  %554.0 : Float(10, 288, 25, 25) = ^AvgPool2d(3, 1, 1, False, True)(%516.0), uses = [[%556.i0]];
  %556.0 : Float(10, 64, 25, 25) = CppOp[ConvForward](%554.0, %101, %102), uses = [[%558.i0]];
  %558.0 : Float(10, 64, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%556.0, %103, %104), uses = [[%560.i0]];
  %560.0 : Float(10, 64, 25, 25) = ^Threshold(0, 0, False)(%558.0), uses = [[%562.i3]];
  %562.0 : Float(10, 288, 25, 25) = ^Concat(1)(%522.0, %534.0, %552.0, %560.0), uses = [[%564.i0, %570.i0, %588.i0]];
  %564.0 : Float(10, 384, 12, 12) = CppOp[ConvForward](%562.0, %105, %106), uses = [[%566.i0]];
  %566.0 : Float(10, 384, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%564.0, %107, %108), uses = [[%568.i0]];
  %568.0 : Float(10, 384, 12, 12) = ^Threshold(0, 0, False)(%566.0), uses = [[%591.i0]];
  %570.0 : Float(10, 64, 25, 25) = CppOp[ConvForward](%562.0, %109, %110), uses = [[%572.i0]];
  %572.0 : Float(10, 64, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%570.0, %111, %112), uses = [[%574.i0]];
  %574.0 : Float(10, 64, 25, 25) = ^Threshold(0, 0, False)(%572.0), uses = [[%576.i0]];
  %576.0 : Float(10, 96, 25, 25) = CppOp[ConvForward](%574.0, %113, %114), uses = [[%578.i0]];
  %578.0 : Float(10, 96, 25, 25) = CppOp[N5torch8autograd16BatchNormForwardE](%576.0, %115, %116), uses = [[%580.i0]];
  %580.0 : Float(10, 96, 25, 25) = ^Threshold(0, 0, False)(%578.0), uses = [[%582.i0]];
  %582.0 : Float(10, 96, 12, 12) = CppOp[ConvForward](%580.0, %117, %118), uses = [[%584.i0]];
  %584.0 : Float(10, 96, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%582.0, %119, %120), uses = [[%586.i0]];
  %586.0 : Float(10, 96, 12, 12) = ^Threshold(0, 0, False)(%584.0), uses = [[%591.i1]];
  %588.0 : Float(10, 288, 12, 12), %588.1 : Long(10, 288, 12, 12) = ^MaxPool2d(3, 2, 0, 1, False)(%562.0), uses = [[%591.i2], []];
  %591.0 : Float(10, 768, 12, 12) = ^Concat(1)(%568.0, %586.0, %588.0), uses = [[%593.i0, %599.i0, %617.i0, %647.i0]];
  %593.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%591.0, %121, %122), uses = [[%595.i0]];
  %595.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%593.0, %123, %124), uses = [[%597.i0]];
  %597.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%595.0), uses = [[%655.i0]];
  %599.0 : Float(10, 128, 12, 12) = CppOp[ConvForward](%591.0, %125, %126), uses = [[%601.i0]];
  %601.0 : Float(10, 128, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%599.0, %127, %128), uses = [[%603.i0]];
  %603.0 : Float(10, 128, 12, 12) = ^Threshold(0, 0, False)(%601.0), uses = [[%605.i0]];
  %605.0 : Float(10, 128, 12, 12) = CppOp[ConvForward](%603.0, %129, %130), uses = [[%607.i0]];
  %607.0 : Float(10, 128, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%605.0, %131, %132), uses = [[%609.i0]];
  %609.0 : Float(10, 128, 12, 12) = ^Threshold(0, 0, False)(%607.0), uses = [[%611.i0]];
  %611.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%609.0, %133, %134), uses = [[%613.i0]];
  %613.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%611.0, %135, %136), uses = [[%615.i0]];
  %615.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%613.0), uses = [[%655.i1]];
  %617.0 : Float(10, 128, 12, 12) = CppOp[ConvForward](%591.0, %137, %138), uses = [[%619.i0]];
  %619.0 : Float(10, 128, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%617.0, %139, %140), uses = [[%621.i0]];
  %621.0 : Float(10, 128, 12, 12) = ^Threshold(0, 0, False)(%619.0), uses = [[%623.i0]];
  %623.0 : Float(10, 128, 12, 12) = CppOp[ConvForward](%621.0, %141, %142), uses = [[%625.i0]];
  %625.0 : Float(10, 128, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%623.0, %143, %144), uses = [[%627.i0]];
  %627.0 : Float(10, 128, 12, 12) = ^Threshold(0, 0, False)(%625.0), uses = [[%629.i0]];
  %629.0 : Float(10, 128, 12, 12) = CppOp[ConvForward](%627.0, %145, %146), uses = [[%631.i0]];
  %631.0 : Float(10, 128, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%629.0, %147, %148), uses = [[%633.i0]];
  %633.0 : Float(10, 128, 12, 12) = ^Threshold(0, 0, False)(%631.0), uses = [[%635.i0]];
  %635.0 : Float(10, 128, 12, 12) = CppOp[ConvForward](%633.0, %149, %150), uses = [[%637.i0]];
  %637.0 : Float(10, 128, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%635.0, %151, %152), uses = [[%639.i0]];
  %639.0 : Float(10, 128, 12, 12) = ^Threshold(0, 0, False)(%637.0), uses = [[%641.i0]];
  %641.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%639.0, %153, %154), uses = [[%643.i0]];
  %643.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%641.0, %155, %156), uses = [[%645.i0]];
  %645.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%643.0), uses = [[%655.i2]];
  %647.0 : Float(10, 768, 12, 12) = ^AvgPool2d(3, 1, 1, False, True)(%591.0), uses = [[%649.i0]];
  %649.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%647.0, %157, %158), uses = [[%651.i0]];
  %651.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%649.0, %159, %160), uses = [[%653.i0]];
  %653.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%651.0), uses = [[%655.i3]];
  %655.0 : Float(10, 768, 12, 12) = ^Concat(1)(%597.0, %615.0, %645.0, %653.0), uses = [[%657.i0, %663.i0, %681.i0, %711.i0]];
  %657.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%655.0, %161, %162), uses = [[%659.i0]];
  %659.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%657.0, %163, %164), uses = [[%661.i0]];
  %661.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%659.0), uses = [[%719.i0]];
  %663.0 : Float(10, 160, 12, 12) = CppOp[ConvForward](%655.0, %165, %166), uses = [[%665.i0]];
  %665.0 : Float(10, 160, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%663.0, %167, %168), uses = [[%667.i0]];
  %667.0 : Float(10, 160, 12, 12) = ^Threshold(0, 0, False)(%665.0), uses = [[%669.i0]];
  %669.0 : Float(10, 160, 12, 12) = CppOp[ConvForward](%667.0, %169, %170), uses = [[%671.i0]];
  %671.0 : Float(10, 160, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%669.0, %171, %172), uses = [[%673.i0]];
  %673.0 : Float(10, 160, 12, 12) = ^Threshold(0, 0, False)(%671.0), uses = [[%675.i0]];
  %675.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%673.0, %173, %174), uses = [[%677.i0]];
  %677.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%675.0, %175, %176), uses = [[%679.i0]];
  %679.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%677.0), uses = [[%719.i1]];
  %681.0 : Float(10, 160, 12, 12) = CppOp[ConvForward](%655.0, %177, %178), uses = [[%683.i0]];
  %683.0 : Float(10, 160, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%681.0, %179, %180), uses = [[%685.i0]];
  %685.0 : Float(10, 160, 12, 12) = ^Threshold(0, 0, False)(%683.0), uses = [[%687.i0]];
  %687.0 : Float(10, 160, 12, 12) = CppOp[ConvForward](%685.0, %181, %182), uses = [[%689.i0]];
  %689.0 : Float(10, 160, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%687.0, %183, %184), uses = [[%691.i0]];
  %691.0 : Float(10, 160, 12, 12) = ^Threshold(0, 0, False)(%689.0), uses = [[%693.i0]];
  %693.0 : Float(10, 160, 12, 12) = CppOp[ConvForward](%691.0, %185, %186), uses = [[%695.i0]];
  %695.0 : Float(10, 160, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%693.0, %187, %188), uses = [[%697.i0]];
  %697.0 : Float(10, 160, 12, 12) = ^Threshold(0, 0, False)(%695.0), uses = [[%699.i0]];
  %699.0 : Float(10, 160, 12, 12) = CppOp[ConvForward](%697.0, %189, %190), uses = [[%701.i0]];
  %701.0 : Float(10, 160, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%699.0, %191, %192), uses = [[%703.i0]];
  %703.0 : Float(10, 160, 12, 12) = ^Threshold(0, 0, False)(%701.0), uses = [[%705.i0]];
  %705.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%703.0, %193, %194), uses = [[%707.i0]];
  %707.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%705.0, %195, %196), uses = [[%709.i0]];
  %709.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%707.0), uses = [[%719.i2]];
  %711.0 : Float(10, 768, 12, 12) = ^AvgPool2d(3, 1, 1, False, True)(%655.0), uses = [[%713.i0]];
  %713.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%711.0, %197, %198), uses = [[%715.i0]];
  %715.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%713.0, %199, %200), uses = [[%717.i0]];
  %717.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%715.0), uses = [[%719.i3]];
  %719.0 : Float(10, 768, 12, 12) = ^Concat(1)(%661.0, %679.0, %709.0, %717.0), uses = [[%721.i0, %727.i0, %745.i0, %775.i0]];
  %721.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%719.0, %201, %202), uses = [[%723.i0]];
  %723.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%721.0, %203, %204), uses = [[%725.i0]];
  %725.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%723.0), uses = [[%783.i0]];
  %727.0 : Float(10, 160, 12, 12) = CppOp[ConvForward](%719.0, %205, %206), uses = [[%729.i0]];
  %729.0 : Float(10, 160, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%727.0, %207, %208), uses = [[%731.i0]];
  %731.0 : Float(10, 160, 12, 12) = ^Threshold(0, 0, False)(%729.0), uses = [[%733.i0]];
  %733.0 : Float(10, 160, 12, 12) = CppOp[ConvForward](%731.0, %209, %210), uses = [[%735.i0]];
  %735.0 : Float(10, 160, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%733.0, %211, %212), uses = [[%737.i0]];
  %737.0 : Float(10, 160, 12, 12) = ^Threshold(0, 0, False)(%735.0), uses = [[%739.i0]];
  %739.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%737.0, %213, %214), uses = [[%741.i0]];
  %741.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%739.0, %215, %216), uses = [[%743.i0]];
  %743.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%741.0), uses = [[%783.i1]];
  %745.0 : Float(10, 160, 12, 12) = CppOp[ConvForward](%719.0, %217, %218), uses = [[%747.i0]];
  %747.0 : Float(10, 160, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%745.0, %219, %220), uses = [[%749.i0]];
  %749.0 : Float(10, 160, 12, 12) = ^Threshold(0, 0, False)(%747.0), uses = [[%751.i0]];
  %751.0 : Float(10, 160, 12, 12) = CppOp[ConvForward](%749.0, %221, %222), uses = [[%753.i0]];
  %753.0 : Float(10, 160, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%751.0, %223, %224), uses = [[%755.i0]];
  %755.0 : Float(10, 160, 12, 12) = ^Threshold(0, 0, False)(%753.0), uses = [[%757.i0]];
  %757.0 : Float(10, 160, 12, 12) = CppOp[ConvForward](%755.0, %225, %226), uses = [[%759.i0]];
  %759.0 : Float(10, 160, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%757.0, %227, %228), uses = [[%761.i0]];
  %761.0 : Float(10, 160, 12, 12) = ^Threshold(0, 0, False)(%759.0), uses = [[%763.i0]];
  %763.0 : Float(10, 160, 12, 12) = CppOp[ConvForward](%761.0, %229, %230), uses = [[%765.i0]];
  %765.0 : Float(10, 160, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%763.0, %231, %232), uses = [[%767.i0]];
  %767.0 : Float(10, 160, 12, 12) = ^Threshold(0, 0, False)(%765.0), uses = [[%769.i0]];
  %769.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%767.0, %233, %234), uses = [[%771.i0]];
  %771.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%769.0, %235, %236), uses = [[%773.i0]];
  %773.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%771.0), uses = [[%783.i2]];
  %775.0 : Float(10, 768, 12, 12) = ^AvgPool2d(3, 1, 1, False, True)(%719.0), uses = [[%777.i0]];
  %777.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%775.0, %237, %238), uses = [[%779.i0]];
  %779.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%777.0, %239, %240), uses = [[%781.i0]];
  %781.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%779.0), uses = [[%783.i3]];
  %783.0 : Float(10, 768, 12, 12) = ^Concat(1)(%725.0, %743.0, %773.0, %781.0), uses = [[%785.i0, %791.i0, %809.i0, %839.i0]];
  %785.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%783.0, %241, %242), uses = [[%787.i0]];
  %787.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%785.0, %243, %244), uses = [[%789.i0]];
  %789.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%787.0), uses = [[%847.i0]];
  %791.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%783.0, %245, %246), uses = [[%793.i0]];
  %793.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%791.0, %247, %248), uses = [[%795.i0]];
  %795.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%793.0), uses = [[%797.i0]];
  %797.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%795.0, %249, %250), uses = [[%799.i0]];
  %799.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%797.0, %251, %252), uses = [[%801.i0]];
  %801.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%799.0), uses = [[%803.i0]];
  %803.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%801.0, %253, %254), uses = [[%805.i0]];
  %805.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%803.0, %255, %256), uses = [[%807.i0]];
  %807.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%805.0), uses = [[%847.i1]];
  %809.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%783.0, %257, %258), uses = [[%811.i0]];
  %811.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%809.0, %259, %260), uses = [[%813.i0]];
  %813.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%811.0), uses = [[%815.i0]];
  %815.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%813.0, %261, %262), uses = [[%817.i0]];
  %817.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%815.0, %263, %264), uses = [[%819.i0]];
  %819.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%817.0), uses = [[%821.i0]];
  %821.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%819.0, %265, %266), uses = [[%823.i0]];
  %823.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%821.0, %267, %268), uses = [[%825.i0]];
  %825.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%823.0), uses = [[%827.i0]];
  %827.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%825.0, %269, %270), uses = [[%829.i0]];
  %829.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%827.0, %271, %272), uses = [[%831.i0]];
  %831.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%829.0), uses = [[%833.i0]];
  %833.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%831.0, %273, %274), uses = [[%835.i0]];
  %835.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%833.0, %275, %276), uses = [[%837.i0]];
  %837.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%835.0), uses = [[%847.i2]];
  %839.0 : Float(10, 768, 12, 12) = ^AvgPool2d(3, 1, 1, False, True)(%783.0), uses = [[%841.i0]];
  %841.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%839.0, %277, %278), uses = [[%843.i0]];
  %843.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%841.0, %279, %280), uses = [[%845.i0]];
  %845.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%843.0), uses = [[%847.i3]];
  %847.0 : Float(10, 768, 12, 12) = ^Concat(1)(%789.0, %807.0, %837.0, %845.0), uses = [[%849.i0, %869.i0, %881.i0, %905.i0]];
  %849.0 : Float(10, 768, 3, 3) = ^AvgPool2d(5, 3, 0, False, True)(%847.0), uses = [[%851.i0]];
  %851.0 : Float(10, 128, 3, 3) = CppOp[ConvForward](%849.0, %281, %282), uses = [[%853.i0]];
  %853.0 : Float(10, 128, 3, 3) = CppOp[N5torch8autograd16BatchNormForwardE](%851.0, %283, %284), uses = [[%855.i0]];
  %855.0 : Float(10, 128, 3, 3) = ^Threshold(0, 0, False)(%853.0), uses = [[%857.i0]];
  %857.0 : Float(10, 768, 1, 1) = CppOp[ConvForward](%855.0, %285, %286), uses = [[%859.i0]];
  %859.0 : Float(10, 768, 1, 1) = CppOp[N5torch8autograd16BatchNormForwardE](%857.0, %287, %288), uses = [[%861.i0]];
  %861.0 : Float(10, 768, 1, 1) = ^Threshold(0, 0, False)(%859.0), uses = [[%863.i0]];
  %863.0 : Float(10, 768) = ^View((10, -1))(%861.0), uses = [[%867.i1]];
  %865.0 : Float(768!, 1000!) = ^Transpose(0, 1)(%289), uses = [[%867.i2]];
  %867.0 : Float(10, 1000) = ^Addmm(1, 1, False)(%290, %863.0, %865.0), uses = [[%0.i1]];
  %869.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%847.0, %291, %292), uses = [[%871.i0]];
  %871.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%869.0, %293, %294), uses = [[%873.i0]];
  %873.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%871.0), uses = [[%875.i0]];
  %875.0 : Float(10, 320, 5, 5) = CppOp[ConvForward](%873.0, %295, %296), uses = [[%877.i0]];
  %877.0 : Float(10, 320, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%875.0, %297, %298), uses = [[%879.i0]];
  %879.0 : Float(10, 320, 5, 5) = ^Threshold(0, 0, False)(%877.0), uses = [[%908.i0]];
  %881.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%847.0, %299, %300), uses = [[%883.i0]];
  %883.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%881.0, %301, %302), uses = [[%885.i0]];
  %885.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%883.0), uses = [[%887.i0]];
  %887.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%885.0, %303, %304), uses = [[%889.i0]];
  %889.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%887.0, %305, %306), uses = [[%891.i0]];
  %891.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%889.0), uses = [[%893.i0]];
  %893.0 : Float(10, 192, 12, 12) = CppOp[ConvForward](%891.0, %307, %308), uses = [[%895.i0]];
  %895.0 : Float(10, 192, 12, 12) = CppOp[N5torch8autograd16BatchNormForwardE](%893.0, %309, %310), uses = [[%897.i0]];
  %897.0 : Float(10, 192, 12, 12) = ^Threshold(0, 0, False)(%895.0), uses = [[%899.i0]];
  %899.0 : Float(10, 192, 5, 5) = CppOp[ConvForward](%897.0, %311, %312), uses = [[%901.i0]];
  %901.0 : Float(10, 192, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%899.0, %313, %314), uses = [[%903.i0]];
  %903.0 : Float(10, 192, 5, 5) = ^Threshold(0, 0, False)(%901.0), uses = [[%908.i1]];
  %905.0 : Float(10, 768, 5, 5), %905.1 : Long(10, 768, 5, 5) = ^MaxPool2d(3, 2, 0, 1, False)(%847.0), uses = [[%908.i2], []];
  %908.0 : Float(10, 1280, 5, 5) = ^Concat(1)(%879.0, %903.0, %905.0), uses = [[%910.i0, %916.i0, %936.i0, %962.i0]];
  %910.0 : Float(10, 320, 5, 5) = CppOp[ConvForward](%908.0, %315, %316), uses = [[%912.i0]];
  %912.0 : Float(10, 320, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%910.0, %317, %318), uses = [[%914.i0]];
  %914.0 : Float(10, 320, 5, 5) = ^Threshold(0, 0, False)(%912.0), uses = [[%970.i0]];
  %916.0 : Float(10, 384, 5, 5) = CppOp[ConvForward](%908.0, %319, %320), uses = [[%918.i0]];
  %918.0 : Float(10, 384, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%916.0, %321, %322), uses = [[%920.i0]];
  %920.0 : Float(10, 384, 5, 5) = ^Threshold(0, 0, False)(%918.0), uses = [[%922.i0, %928.i0]];
  %922.0 : Float(10, 384, 5, 5) = CppOp[ConvForward](%920.0, %323, %324), uses = [[%924.i0]];
  %924.0 : Float(10, 384, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%922.0, %325, %326), uses = [[%926.i0]];
  %926.0 : Float(10, 384, 5, 5) = ^Threshold(0, 0, False)(%924.0), uses = [[%934.i0]];
  %928.0 : Float(10, 384, 5, 5) = CppOp[ConvForward](%920.0, %327, %328), uses = [[%930.i0]];
  %930.0 : Float(10, 384, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%928.0, %329, %330), uses = [[%932.i0]];
  %932.0 : Float(10, 384, 5, 5) = ^Threshold(0, 0, False)(%930.0), uses = [[%934.i1]];
  %934.0 : Float(10, 768, 5, 5) = ^Concat(1)(%926.0, %932.0), uses = [[%970.i1]];
  %936.0 : Float(10, 448, 5, 5) = CppOp[ConvForward](%908.0, %331, %332), uses = [[%938.i0]];
  %938.0 : Float(10, 448, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%936.0, %333, %334), uses = [[%940.i0]];
  %940.0 : Float(10, 448, 5, 5) = ^Threshold(0, 0, False)(%938.0), uses = [[%942.i0]];
  %942.0 : Float(10, 384, 5, 5) = CppOp[ConvForward](%940.0, %335, %336), uses = [[%944.i0]];
  %944.0 : Float(10, 384, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%942.0, %337, %338), uses = [[%946.i0]];
  %946.0 : Float(10, 384, 5, 5) = ^Threshold(0, 0, False)(%944.0), uses = [[%948.i0, %954.i0]];
  %948.0 : Float(10, 384, 5, 5) = CppOp[ConvForward](%946.0, %339, %340), uses = [[%950.i0]];
  %950.0 : Float(10, 384, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%948.0, %341, %342), uses = [[%952.i0]];
  %952.0 : Float(10, 384, 5, 5) = ^Threshold(0, 0, False)(%950.0), uses = [[%960.i0]];
  %954.0 : Float(10, 384, 5, 5) = CppOp[ConvForward](%946.0, %343, %344), uses = [[%956.i0]];
  %956.0 : Float(10, 384, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%954.0, %345, %346), uses = [[%958.i0]];
  %958.0 : Float(10, 384, 5, 5) = ^Threshold(0, 0, False)(%956.0), uses = [[%960.i1]];
  %960.0 : Float(10, 768, 5, 5) = ^Concat(1)(%952.0, %958.0), uses = [[%970.i2]];
  %962.0 : Float(10, 1280, 5, 5) = ^AvgPool2d(3, 1, 1, False, True)(%908.0), uses = [[%964.i0]];
  %964.0 : Float(10, 192, 5, 5) = CppOp[ConvForward](%962.0, %347, %348), uses = [[%966.i0]];
  %966.0 : Float(10, 192, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%964.0, %349, %350), uses = [[%968.i0]];
  %968.0 : Float(10, 192, 5, 5) = ^Threshold(0, 0, False)(%966.0), uses = [[%970.i3]];
  %970.0 : Float(10, 2048, 5, 5) = ^Concat(1)(%914.0, %934.0, %960.0, %968.0), uses = [[%972.i0, %978.i0, %998.i0, %1024.i0]];
  %972.0 : Float(10, 320, 5, 5) = CppOp[ConvForward](%970.0, %351, %352), uses = [[%974.i0]];
  %974.0 : Float(10, 320, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%972.0, %353, %354), uses = [[%976.i0]];
  %976.0 : Float(10, 320, 5, 5) = ^Threshold(0, 0, False)(%974.0), uses = [[%1032.i0]];
  %978.0 : Float(10, 384, 5, 5) = CppOp[ConvForward](%970.0, %355, %356), uses = [[%980.i0]];
  %980.0 : Float(10, 384, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%978.0, %357, %358), uses = [[%982.i0]];
  %982.0 : Float(10, 384, 5, 5) = ^Threshold(0, 0, False)(%980.0), uses = [[%984.i0, %990.i0]];
  %984.0 : Float(10, 384, 5, 5) = CppOp[ConvForward](%982.0, %359, %360), uses = [[%986.i0]];
  %986.0 : Float(10, 384, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%984.0, %361, %362), uses = [[%988.i0]];
  %988.0 : Float(10, 384, 5, 5) = ^Threshold(0, 0, False)(%986.0), uses = [[%996.i0]];
  %990.0 : Float(10, 384, 5, 5) = CppOp[ConvForward](%982.0, %363, %364), uses = [[%992.i0]];
  %992.0 : Float(10, 384, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%990.0, %365, %366), uses = [[%994.i0]];
  %994.0 : Float(10, 384, 5, 5) = ^Threshold(0, 0, False)(%992.0), uses = [[%996.i1]];
  %996.0 : Float(10, 768, 5, 5) = ^Concat(1)(%988.0, %994.0), uses = [[%1032.i1]];
  %998.0 : Float(10, 448, 5, 5) = CppOp[ConvForward](%970.0, %367, %368), uses = [[%1000.i0]];
  %1000.0 : Float(10, 448, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%998.0, %369, %370), uses = [[%1002.i0]];
  %1002.0 : Float(10, 448, 5, 5) = ^Threshold(0, 0, False)(%1000.0), uses = [[%1004.i0]];
  %1004.0 : Float(10, 384, 5, 5) = CppOp[ConvForward](%1002.0, %371, %372), uses = [[%1006.i0]];
  %1006.0 : Float(10, 384, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%1004.0, %373, %374), uses = [[%1008.i0]];
  %1008.0 : Float(10, 384, 5, 5) = ^Threshold(0, 0, False)(%1006.0), uses = [[%1010.i0, %1016.i0]];
  %1010.0 : Float(10, 384, 5, 5) = CppOp[ConvForward](%1008.0, %375, %376), uses = [[%1012.i0]];
  %1012.0 : Float(10, 384, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%1010.0, %377, %378), uses = [[%1014.i0]];
  %1014.0 : Float(10, 384, 5, 5) = ^Threshold(0, 0, False)(%1012.0), uses = [[%1022.i0]];
  %1016.0 : Float(10, 384, 5, 5) = CppOp[ConvForward](%1008.0, %379, %380), uses = [[%1018.i0]];
  %1018.0 : Float(10, 384, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%1016.0, %381, %382), uses = [[%1020.i0]];
  %1020.0 : Float(10, 384, 5, 5) = ^Threshold(0, 0, False)(%1018.0), uses = [[%1022.i1]];
  %1022.0 : Float(10, 768, 5, 5) = ^Concat(1)(%1014.0, %1020.0), uses = [[%1032.i2]];
  %1024.0 : Float(10, 2048, 5, 5) = ^AvgPool2d(3, 1, 1, False, True)(%970.0), uses = [[%1026.i0]];
  %1026.0 : Float(10, 192, 5, 5) = CppOp[ConvForward](%1024.0, %383, %384), uses = [[%1028.i0]];
  %1028.0 : Float(10, 192, 5, 5) = CppOp[N5torch8autograd16BatchNormForwardE](%1026.0, %385, %386), uses = [[%1030.i0]];
  %1030.0 : Float(10, 192, 5, 5) = ^Threshold(0, 0, False)(%1028.0), uses = [[%1032.i3]];
  %1032.0 : Float(10, 2048, 5, 5) = ^Concat(1)(%976.0, %996.0, %1022.0, %1030.0), uses = [[%1034.i0]];
  %1034.0 : Float(10, 2048, 1, 1) = ^AvgPool2d(5, None, 0, False, True)(%1032.0), uses = [[%1036.i0]];
  %1036.0 : Float(10, 2048, 1, 1) = ^Dropout(0.5, True, False)(%1034.0), uses = [[%1038.i0]];
  %1038.0 : Float(10, 2048) = ^View((10, -1))(%1036.0), uses = [[%1042.i1]];
  %1040.0 : Float(2048!, 1000!) = ^Transpose(0, 1)(%387), uses = [[%1042.i2]];
  %1042.0 : Float(10, 1000) = ^Addmm(1, 1, False)(%388, %1038.0, %1040.0), uses = [[%0.i0]];
  return (%1042.0, %867.0);
}
